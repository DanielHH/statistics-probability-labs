#prior for Mu
xfit <- seq(-5, 15, 1)
priorMu <- dt(xfit, df = 1)
plot(xfit, priorMu)
data <- c(11.3710, 9.4353, 10.3631, 10.6329, 10.4043, 9.8939, 11.5115)
hist(xlim = range(-5, 15), x = data)
normal_log_likelihood <- function(mu, data, sigma2 = 1) {
xsum <- sum((data - mu)**2)
return(-length(data)/2*log(2*pi) - length(data)/2 * log(sigma2) - 1/(2 * sigma2) * xsum)
}
llik <- normal_log_likelihood(5, data)
round(llik, 1)
#likelihood för normalfördelning
normal_likelihood <- function(mu, data, sigma2 = 1) {
return((2*pi*sigma2)**(-length(data)/2)*exp(-(1/(2*sigma2))*sum((data-mu)**2)))
}
xfit <- seq(-5, 15, 1)
i <- 1
yfit <- c(xfit)
while(i < length(xfit)) {
yfit[i] <- normal_likelihood(xfit[i], data)
i <- i + 1
}
plot(xfit, yfit)
#likelihood för normalfördelning
normal_likelihood <- function(mu, data, sigma2 = 1) {
return((2*pi*sigma2)**(-length(data)/2)*exp(-(1/(2*sigma2))*sum((data-mu)**2)))
}
xfit <- seq(-5, 15, 1)
i <- 1
yfit <- c(xfit)
while(i < length(xfit)) {
yfit[i] <- normal_likelihood(xfit[i], data)
i <- i + 1
}
plot(xfit, yfit)
x <- seq(0, 1, 0.001)
post_A <- dbeta(x, 15, 8)
hist(post_A)
dbeta
post_A
x <- seq(0, 1, 0.01)
post_A <- dbeta(x, 15, 8)
hist(post_A)
x <- seq(0, 1, 0.001)
post_A <- dbeta(x, 15, 8)
hist(post_A)
plot(post_A)
hist(post_A)
hist(xlim = range (0,1), post_A)
#prior for Mu
xfit <- seq(-5, 15, 0.01)
priorMu <- dt(xfit, df = 1)
plot(xfit, priorMu, type = 'l', lwd = 3, col = "blue")
data <- c(11.3710, 9.4353, 10.3631, 10.6329, 10.4043, 9.8939, 11.5115)
hist(xlim = range(-5, 15), x = data)
plot(post_A)
hist(post_A)
post_A <- rbeta(x, 15, 8)
hist(post_A)
hist(xlim = range(0, 1), post_A)
hist(xlim = range(0, 1), post_b)
hist(xlim = range(0, 1), post_B)
x <- seq(0, 1, 0.001)
post_B <- rbeta(x, 3, 10)
hist(xlim = range(0, 1), post_B)
x <- seq(0, 1, 0.001)
post_A <- rbeta(x, 15, 8)
hist(xlim = range(0, 1), post_A)
x <- seq(0, 1, 0.001)
post_B <- rbeta(x, 3, 10)
hist(xlim = range(0, 1), post_B)
x <- seq(0, 1, 0.001)
post_A <- rbeta(x, 15, 8)
hist(xlim = range(0, 1), post_A)
x <- seq(0, 1, 0.001)
post_B <- rbeta(x, 3, 10)
hist(xlim = range(0, 1), post_B)
AMoreInteresting <- function(a, b) {
i <- 1
aLarger <- 0
while (i < length(a)) {
if (a[i] > b[i]) {
aLarger <- aLarger + 1
}
i <- i + 1
}
return (aLarger/length(a))
}
print(AMoreInteresting(post_A, post_B))
AMoreInteresting <- function(a, b) {
i <- 1
aLarger <- 0
while (i < length(a)) {
if (a[i] > b[i]) {
aLarger <- aLarger + 1
}
i <- i + 1
}
return (aLarger/length(a))
}
AMoreInteresting(post_A, post_B)
XMoreThanHalfInteresting(post_A)
XMoreThanHalfInteresting <- function(x) {
i <- 1
xLarger <- 0
while (i < length(a)) {
if (x[i] > 0.5) {
xLarger <- xLarger + 1
}
i <- i + 1
}
return (xLarger/length(x))
}
XMoreThanHalfInteresting(post_A)
XMoreThanHalfInteresting <- function(x) {
i <- 1
xLarger <- 0
while (i < length(x)) {
if (x[i] > 0.5) {
xLarger <- xLarger + 1
}
i <- i + 1
}
return (xLarger/length(x))
}
XMoreThanHalfInteresting(post_A)
x <- seq(0, 1, 0.001)
post_A <- rbeta(x, 15, 8)
hist(xlim = range(0, 1), post_A)
XMoreThanHalfInteresting <- function(x) {
i <- 1
xLarger <- 0
while (i < length(x)) {
if (x[i] > 0.5) {
xLarger <- xLarger + 1
}
i <- i + 1
}
return (xLarger/length(x))
}
XMoreThanHalfInteresting(post_A)
XMoreThanHalfInteresting(post_B)
x <- seq(0, 1, 0.001)
post_B <- rbeta(x, 3, 10)
hist(xlim = range(0, 1), post_B)
# aposterior för produkt A
x <- seq(0, 1, 0.001)
A_beta <- dbeta(x, 15, 8)
plot(87, rbinom(x, A_beta), type = 'l', lwd = 3, col = "green")
# aposterior för produkt A
x <- seq(0, 1, 0.001)
A_beta <- dbeta(x, 15, 8)
plot(87, rbinom(10000, 87, mean(A_beta)), type = 'l', lwd = 3, col = "green")
# aposterior för produkt A
x <- seq(0, 1, 0.001)
A_beta <- dbeta(x, 15, 8)
plot(rbinom(10000, 87, mean(A_beta)), type = 'l', lwd = 3, col = "green")
# aposterior för produkt A
x <- seq(0, 1, 0.001)
A_beta <- dbeta(x, 15, 8)
plot(dbinom(10000, 87, mean(A_beta)), type = 'l', lwd = 3, col = "green")
# aposterior för produkt A
x <- seq(0, 1, 0.001)
A_beta <- rbeta(x, 15, 8)
hist(dbinom(10000, 87, mean(A_beta)))
# aposterior för produkt A
x <- seq(0, 1, 0.001)
A_beta <- rbeta(x, 15, 8)
hist(rbinom(10000, 87, mean(A_beta)))
AMoreInteresting <- function(a, b) {
i <- 1
aLarger <- 0
while (i < length(a)) {
if (a[i] > b[i]) {
aLarger <- aLarger + 1
}
i <- i + 1
}
return (aLarger/length(a))
}
AMoreInteresting(post_A, post_B)
x <- seq(0, 1, 0.001)
post_A <- rbeta(x, 15, 8)
hist(xlim = range(0, 1), post_A)
x <- seq(0, 1, 0.001)
post_B <- rbeta(x, 3, 10)
hist(xlim = range(0, 1), post_B)
x <- seq(0, 1, 0.001)
post_A <- rbeta(x, 15, 8)
hist(xlim = range(0, 1), post_A)
# aposterior för produkt A
x <- seq(0, 1, 0.001)
A_beta <- rbeta(x, 15, 8)
hist(rbinom(10000, 87, mean(A_beta)))
# aposterior för produkt A
x <- seq(0, 1, 0.001)
A_beta <- rbeta(x, 15, 8)
hist(rbinom(1000, 87, mean(A_beta)))
# aposterior för produkt A
x <- seq(0, 1, 0.001)
A_beta <- rbeta(x, 15, 8)
hist(rbinom(10000, 87, mean(A_beta)))
# aposterior för produkt B
x <- seq(0, 1, 0.001)
B_beta <- rbeta(x, 3, 10)
hist(rbinom(10000, 87, mean(B_beta)))
sum(votepost[,8] > votepost[,1])/10000
# Chunk 1: setup
library(gtools)
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
#prior for Mu
xfit <- seq(-5, 15, 0.01)
priorMu <- dt(xfit, df = 1)
plot(xfit, priorMu, type = 'l', lwd = 3, col = "blue")
# Chunk 3
data <- c(11.3710, 9.4353, 10.3631, 10.6329, 10.4043, 9.8939, 11.5115)
hist(xlim = range(-5, 15), x = data)
# Chunk 4
normal_log_likelihood <- function(mu, data, sigma2 = 1) {
xsum <- sum((data - mu)**2)
return(-length(data)/2*log(2*pi) - length(data)/2 * log(sigma2) - 1/(2 * sigma2) * xsum)
}
xfit <- seq(-5, 15, 0.01)
i <- 1
yfit <- c(xfit)
while(i <= length(xfit)) {
yfit[i] <- normal_log_likelihood(xfit[i], data)
i <- i + 1
}
likelihoodplot <- plot(xfit, exp(yfit), type = 'l', lwd = 3, col = "blue")
# Chunk 5
#posterior
xfit <- seq(-5, 15, 0.01)
posterior <- yfit + log(priorMu)
plot(xfit, exp(posterior), type = 'l', lwd = 3, col = "red")
# Chunk 6
# Prior för produkt A
x <- seq(0, 1, 0.001)
A_beta <- dbeta(x, 7, 3)
plot(x, A_beta, type = 'l', lwd = 3, col = "green")
# Chunk 7
# Prior för produkt B
x <- seq(0, 1, 0.001)
B_beta <- dbeta(x, 2, 8)
plot(x, B_beta, type = 'l', lwd = 3, col = "red")
# Chunk 8
x <- seq(0, 1, 0.001)
post_A <- rbeta(x, 15, 8)
hist(xlim = range(0, 1), post_A)
# Chunk 9
x <- seq(0, 1, 0.001)
post_B <- rbeta(x, 3, 10)
hist(xlim = range(0, 1), post_B)
# Chunk 10
AMoreInteresting <- function(a, b) {
i <- 1
aLarger <- 0
while (i < length(a)) {
if (a[i] > b[i]) {
aLarger <- aLarger + 1
}
i <- i + 1
}
return (aLarger/length(a))
}
AMoreInteresting(post_A, post_B)
# Chunk 11
XMoreThanHalfInteresting <- function(x) {
i <- 1
xLarger <- 0
while (i < length(x)) {
if (x[i] > 0.5) {
xLarger <- xLarger + 1
}
i <- i + 1
}
return (xLarger/length(x))
}
XMoreThanHalfInteresting(post_A)
XMoreThanHalfInteresting(post_B)
# Chunk 12
# aposterior för produkt A
x <- seq(0, 1, 0.001)
A_beta <- rbeta(x, 15, 8)
A_rbin <- rbinom(10000, 87, mean(A_beta))
hist(A_rbin)
# Chunk 13
# aposterior för produkt B
x <- seq(0, 1, 0.001)
B_beta <- rbeta(x, 3, 10)
B_rbin <- rbinom(10000, 87, mean(B_beta))
hist(B_rbin)
# Chunk 14
# Produkt A:
length(A_rbin[A_rbin>40])/length(A_rbin)
# Produkt B:
length(B_rbin[B_rbin>40])/length(B_rbin)
# Chunk 15
# Produkt A:
87 * mean(A_beta)
#Produkt B:
87 * mean(B_beta)
# Chunk 16
mean <- 0.07/365 # 7 procent genomsnittlig avkastning per år
variance = 0.001**2 # daglig varians på avkastningen (osäkerhet)
xfit <- seq(-0.007, 0.007, 0.0001)
prior <- dnorm(xfit, mean, variance**(1/2))
plot(xfit, prior, type = "l")
# Chunk 17
data = c(0.0315, -0.0180, -0.0021, -0.0202, 0.0076)
mean_data <- mean(data)
sigma2 <- sum((data-mean_data)**2)/(length(data) - 1) # variance
omega <- (length(data)/sigma2)/(length(data)/sigma2+1/variance)
myx <- omega*mean(data)+(1-omega)*mean # väntevärde för aposterior
print(myx)
thau2x <- 1/(length(data)/sigma2 + 1/variance)
aposterior <- dnorm(xfit, myx, thau2x**(1/2))
plot(xfit, aposterior, type = "l")
# Chunk 18
post_sim <- rnorm(10000, myx, thau2x**(1/2))
post_sim <- sort(post_sim, decreasing = FALSE)
post_sim_1perc <- post_sim[1:100]
var <- abs(100000 * post_sim_1perc)
hist(var)
# Chunk 19
quantile(var, probs = c(0.0, 0.95))
# Chunk 20
set.seed(4711)
voteprior <- rdirichlet(n = 1000, alpha = c(20, 8, 10, 4, 30, 7, 6, 13, 2))
#Moderaterna
hist(voteprior[,1], main = "Moderaterna", xlim= c(0, 0.5))
abline(v = 0.2333, col = "blue")
#Folkpartiet
hist(voteprior[,2], main = "Folkpartiet", xlim= c(0, 0.5))
abline(v = 0.0542, col = "blue")
#Centerpartiet
hist(voteprior[,3], main = "Centerpartiet", xlim= c(0, 0.5))
abline(v = 0.0611, col = "green")
#Kristdemokratera
hist(voteprior[,4], main = "Kristdemokraterna", xlim= c(0, 0.5))
abline(v = 0.0457, col = "blue")
#Socialdemokraterna
hist(voteprior[,5], main = "Socialdemokraterna", xlim= c(0, 0.5))
abline(v = 0.3101, col = "red")
#Vänsterpartiet
hist(voteprior[,6], main = "Vänsterpartiet", xlim= c(0, 0.5))
abline(v = 0.0572, col = "red")
#Miljöpartiet
hist(voteprior[,7], main = "Miljöpartiet", xlim= c(0, 0.5))
abline(v = 0.0689, col = "green")
#Sverigedemokraterna
hist(voteprior[,8], main = "Sverigedemokraterna", xlim= c(0, 0.5))
abline(v = 0.1286, col = "blue")
#Feministiskt initiativ
hist(voteprior[,9], main = "Feministiskt initiativ", xlim= c(0, 0.5))
abline(v = 0.0312, col = "pink")
# Chunk 21
votepost <- rdirichlet(n = 10000, alpha = c(20+32, 8+12, 10+27, 4+6, 30+58, 7+15, 6+8, 13+36, 2+4))
i = 1
while(i <= 10000) {
j = 1
while(j <= 9) {
if (votepost[i,j] < 0.04) {
votepost[i,j] <- 0
}
j <- j + 1
}
c <- 1/sum(votepost[i,])
k = 1
while (k <= 9) {
votepost[i,k] <- votepost[i,k] * c
k <- k + 1
}
i <- i + 1
}
# Chunk 22
sum(votepost[,1]+votepost[,2]+votepost[,3]+votepost[,4]<votepost[,5]+votepost[,6]+votepost[,7])/10000
sum(votepost[,8] > votepost[,1])/10000
sum(votepost[votepost[,8] > votepost[,1]])/10000
sum(votepost[votepost[,8] > votepost[,1]])/10000
sum(votepost[,8] > votepost[,1])/10000
