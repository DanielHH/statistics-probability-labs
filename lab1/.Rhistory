hist(z, probability = TRUE)
xfit <- seq(0, 3, 1)
yfit <- dbinom(xfit, size = 10, prob = 0.01)
lines(xfit, yfit, col="blue", lwd=2)
z <- binomfunc(1000)
hist(z, probability = TRUE)
xfit <- seq(-2, 2, 1)
yfit <- dbinom(xfit, size = 10, prob = 0.01)
lines(xfit, yfit, col="blue", lwd=2)
z <- binomfunc(1000)
hist(z, probability = TRUE)
xfit <- seq(-2, 2, 0.1)
yfit <- dbinom(xfit, size = 10, prob = 0.01)
lines(xfit, yfit, col="blue", lwd=2)
z <- binomfunc(1000)
hist(z, probability = TRUE)
xfit <- seq(-2, 2, 1)
yfit <- dbinom(xfit, size = 10, prob = 0.01)
lines(xfit, yfit, col="blue", lwd=2)
y <- exponentialfunc(30)
hist(y, probability = TRUE)
xfit <- seq(0, 10, 0.1)
yfit <- dexp(xfit, 1)
lines(xfit, yfit, col="blue", lwd=2)
y <- exponentialfunc(30)
hist(y, probability = TRUE)
xfit <- seq(-10, 10, 0.1)
yfit <- dexp(xfit, 1)
lines(xfit, yfit, col="blue", lwd=2)
y <- exponentialfunc(30)
hist(y, probability = TRUE)
xfit <- seq(0, 10, 0.1)
yfit <- dexp(xfit, 1)
lines(xfit, yfit, col="blue", lwd=2)
y <- exponentialfunc(30)
hist(y, probability = TRUE)
xfit <- seq(0, 10, 0.1)
yfit <- dexp(xfit, 1)
lines(xfit, yfit, col="blue", lwd=2)
y <- exponentialfunc(1000)
hist(y, probability = TRUE)
xfit <- seq(0, 10, 0.1)
yfit <- dexp(xfit, 1)
lines(xfit, yfit, col="blue", lwd=2)
y <- exponentialfunc(1000)
hist(y, probability = TRUE)
xfit <- seq(0, 10, 0.1)
yfit <- dexp(xfit, 1)
lines(xfit, yfit, col="blue", lwd=2)
y <- exponentialfunc(1000)
hist(y, probability = TRUE)
xfit <- seq(0, 10, 0.1)
yfit <- dexp(xfit, 1)
lines(xfit, yfit, col="blue", lwd=2)
y <- exponentialfunc(1000)
hist(y, probability = TRUE)
xfit <- seq(0, 10, 0.1)
yfit <- dexp(xfit, 1)
lines(xfit, yfit, col="blue", lwd=2)
x <- poissonfunc(1000)
hist(x, probability = TRUE)
xfit <- seq(-5, 15, 1)
yfit <- dpois(xfit, lambda = 5)
lines(xfit, yfit, col="blue", lwd=2)
x <- poissonfunc(30)
hist(x, probability = TRUE)
xfit <- seq(-5, 15, 1)
yfit <- dpois(xfit, lambda = 5)
lines(xfit, yfit, col="blue", lwd=2)
x <- poissonfunc(30)
hist(x, probability = TRUE)
xfit <- seq(-5, 15, 1)
yfit <- dpois(xfit, lambda = 5)
lines(xfit, yfit, col="blue", lwd=2)
x <- poissonfunc(30)
hist(x, probability = TRUE)
xfit <- seq(-5, 15, 1)
yfit <- dpois(xfit, lambda = 5)
lines(xfit, yfit, col="blue", lwd=2)
x <- poissonfunc(30)
hist(x, probability = TRUE)
xfit <- seq(-5, 15, 1)
yfit <- dpois(xfit, lambda = 5)
lines(xfit, yfit, col="blue", lwd=2)
x <- poissonfunc(100)
hist(x, probability = TRUE)
xfit <- seq(-5, 15, 1)
yfit <- dpois(xfit, lambda = 5)
lines(xfit, yfit, col="blue", lwd=2)
x <- poissonfunc(1000)
hist(x, probability = TRUE)
xfit <- seq(-5, 15, 1)
yfit <- dpois(xfit, lambda = 5)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 1: setup
library("Rlab")
library("manipulate")
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
x1 <- rnorm(100, mean = 10, sd = 4)
x2 <- rnorm(10000, mean = 10, sd = 4)
# Chunk 3
hist(x1, probability = TRUE)
xfit <- seq(0, 20, 0.1)
yfit <- dnorm(xfit, mean = 10, sd = 4)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 4
hist(x2, probability = TRUE)
xfit <- seq(-5, 25, 0.1)
yfit <- dnorm(xfit, mean = 10, sd = 4)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 5
x1 <- rbern(10000, 0.2)
x2 <- rbinom(n = 10000, size = 20, prob = 0.1)
x3 <- rbinom(n = 10000, size = 20, prob = 0.5)
x4 <- rgeom(10000, 0.1)
x5 <- rpois(10000, 10)
# Chunk 6
hist(x1, probability = TRUE)
xfit <- seq(0, 1, 1)
yfit <- dbern(xfit, 0.2, log = FALSE)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 7
hist(x2, probability = TRUE)
xfit <- seq(0, 8, 1)
yfit <- dbinom(xfit, size = 20, prob = 0.1)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 8
hist(x3, probability = TRUE)
xfit <- seq(0, 20, 1)
yfit <- dbinom(xfit, size = 20, prob = 0.5)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 9
hist(x4, probability = TRUE)
xfit <- seq(0, 100, 1)
yfit <- dgeom(xfit, prob = 0.1)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 10
hist(x5, probability = TRUE)
xfit <- seq(-5, 25, 1)
yfit <- dpois(xfit, lambda = 10)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 11
y1 <- runif(10000, min = 0, max = 1)
y2 <- rexp(10000, rate = 3, beta = 1/3)
y3 <- rgamma(10000, shape=2, rate = 1, scale = 1, alpha = 2, beta = 1)
y4 <- rt(10000, 3)
y5 <- rbeta(10000, 0.1, 0.1, 0)
y6 <- rbeta(10000, 1, 1, 0)
y7 <- rbeta(10000, 10, 5, 0)
# Chunk 12
hist(y1, probability = TRUE)
xfit <- seq(-5, 1.1, 0.01)
yfit <- dunif(xfit, min=0, max=1, log=FALSE)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 13
hist(y2, probability = TRUE)
xfit <- seq(0, 3, 0.01)
yfit <- dexp(xfit, rate = 3, beta = 1/3, log = FALSE)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 14
hist(y3, probability = TRUE)
xfit <- seq(0, 12, 0.01)
yfit <- dgamma(xfit, 2, 1, 1, 2, 1, log=FALSE)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 15
hist(y4, probability = TRUE)
xfit <- seq(-20, 20, 0.01)
yfit <- dt(xfit, 3)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 16
hist(y5, probability = TRUE)
xfit <- seq(-1, 1, 0.01)
yfit <- dbeta(xfit, 0.1, 0.1, 0, log = FALSE)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 17
hist(y6, probability = TRUE)
xfit <- seq(-0.1, 1.1, 0.01)
yfit <- dbeta(xfit, 1, 1, 0, log = FALSE)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 18
hist(y7, probability = TRUE)
xfit <- seq(-0.1, 1.1, 0.01)
yfit <- dbeta(xfit, 10, 5, 0, log = FALSE)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 19
x1 <- rbinom(n = 1000, size = 10000, prob = 0.001)
x2 <- rt(1000, 10000)
# Chunk 20
hist(x1, probability = TRUE)
xfit <- seq(0, 25, 1)
yfit <- dbinom(xfit, size = 10000, prob = 0.001)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 21
hist(x2, probability = TRUE)
xfit <- seq(-4, 4, 0.01)
yfit <- dt(xfit, 10000)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 22
x1 <- rnorm(100, mean = 0, sd = 4)
x2 <- rnorm(10000, mean = 0, sd = 4)
# Chunk 23
hist(x1, probability = TRUE)
xfit <- seq(-10, 10, 0.1)
yfit <- dnorm(xfit, mean = 0, sd = 4)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 24
hist(x2, probability = TRUE)
xfit <- seq(-25, 25, 0.1)
yfit <- dnorm(xfit, mean = 0, sd = 4)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 25
data(faithful)
hist(faithful$waiting, probability = TRUE)
# Chunk 26
x1 <- rbern(10000, 0.3)
y1 <- numeric(10000)
for(i in 1:10000) {
y1[i] = x1[i] * rnorm(1, 53, 6) + (1-x1[i]) * rnorm(1, 81,8)
}
# Chunk 27
hist(y1, probability = TRUE)
xfit <- seq(40, 100, 1)
yfit <- dbern(xfit, 0.3, log = FALSE)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 28
x1 <- rnorm(10000, 0, 1)
y1 <- rbinom(10000, 10, 0.1)
# Chunk 29
hist(y1, probability = TRUE)
xfit <- seq(0, 10, 1)
yfit <- dbinom(xfit, 10, 0.1)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 30
pnorm(0, mean = 0, sd = 1)
# Chunk 31
pnorm(1, mean = 0, sd = 1) - pnorm(-1, mean = 0, sd = 1)
# Chunk 32
1 - pnorm(1.96, mean = 0, sd = 1)
# Chunk 33
pbinom(10, size = 10, prob = 0.1)  - pbinom(0.0, size = 10, prob = 0.1)
# Chunk 34
pbinom(0.0, size = 10, prob = 0.1)
# Chunk 35
pbinom(10.0, size = 10, prob = 0.1) - pbinom(0.0, size = 10, prob = 0.1)
# Chunk 36
x1 <- rnorm(10000, 0, 1)
p = ecdf(x1)
p(0.0)
# Chunk 37
x2 <- rnorm(10000, 0, 1)
p = ecdf(x2)
p(1.0) - p(-1.0)
# Chunk 38
x3 <- rnorm(10000, 0, 1)
p = ecdf(x3)
1 - p(1.96)
# Chunk 39
y1 <- rbinom(10000, 10, 0.1)
p = ecdf(y1)
p(10.0) - p(0.0)
# Chunk 40
y2 <- rbinom(10000, 10, 0.1)
p = ecdf(y2)
p(0.0)
# Chunk 41
y3 <- rbinom(10000, 10, 0.1)
p = ecdf(y3)
p(10.0) - p(0.0)
# Chunk 42
old <- rbinom(10000, size = 337, prob = 0.1)
evold <- mean(old)
print(evold)
hist(old, probability = TRUE)
xfit <- seq(0, 337, 1)
yfit <- dbinom(xfit, 337, 0.1)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 43
newprob <- runif(10000, min = 0.02, max = 0.16)
evnewprob <- mean(newprob)
new <- rbinom(10000, size = 337, prob = evnewprob)
evnew <- mean(new)
print(evnew)
# Chunk 44
p <- ecdf(old)
print(1-p(50))
# Chunk 45
p <- ecdf(new)
print(1-p(50))
# Chunk 46
montecarlocalcpi <- function(n) {
x <- runif(n, min = 0.0, max = 1.0)
y <- runif(n, min = 0.0, max = 1.0)
i <- 1
while (i <= length(x)) {
eq <- (x[i]*x[i]+y[i]*y[i])**(1/2)
if (eq > 1) {
x <- x[-i]
y <- y[-i]
}
else {
i <- i + 1
}
}
z <- length(x)
plot(x, y)
const <- 4 * z/n
return(const)
}
# Chunk 47
montecarlocalcpi(100)
# Chunk 48
montecarlocalcpi(10000)
# Chunk 49
#montecarlocalcpi(100000)
# Chunk 50
#montecarlocalcpi(1000000)
# Chunk 51
x2 <- function(n) {
return(n*n)
}
integrate(x2, lower = 0, upper = 2)
# Chunk 52
montecarlocalc <- function(n) {
x <- runif(n, min = 0.0, max = 2.0)
y <- runif(n, min = 0.0, max = 4.0)
plot(x,y)
return(mean(y < x**2)*8)
}
montecarlocalc(100000)
# Chunk 53
binomfunc <- function(n) {
x <- rbinom(n, size = 10, prob = 0.2)
return(x)
}
gammafunc <- function(n) {
y <- rgamma(n, shape = 2, rate = 2)
return(y)
}
# Chunk 54
binomvector <- c()
draws <- c()
n <- 0
while (n < 10000) {
if(n < 100) {
n <- n + 10
}
else if (n < 1000) {
n <- n + 100
}
else if (n < 10000) {
n <- n + 1000
}
x <- mean(binomfunc(n))
binomvector <- c(binomvector, x)
draws <- c(draws, n)
}
plot(draws, binomvector, type = "l")
# Chunk 55
gammavector <- c()
draws <- c()
n <- 0
while (n < 10000) {
if(n < 100) {
n <- n + 10
}
else if (n < 1000) {
n <- n + 100
}
else if (n < 10000) {
n <- n + 1000
}
x <- mean(gammafunc(n))
gammavector <- c(gammavector, x)
draws <- c(draws, n)
}
plot(draws, gammavector, type = "l")
# Chunk 56
exponentialfunc <- function(n) {
x <- rexp(n, rate = 10)
return(x)
}
poissonfunc <- function(n) {
y <- rpois(n, lambda = 3)
return(y)
}
# Chunk 57
# Ber채knar E(X)
mean(exponentialfunc(10000))
# Ber채knar Var(X)
var(exponentialfunc(10000))
# Ber채knar E(Y)
mean(poissonfunc(10000))
# Ber채knar Var(Y)
var(poissonfunc(10000))
# Chunk 58
x <- exponentialfunc(10000)
y <- poissonfunc(10000)
#1
mean(3)
#2
mean(3*x+2)
#3
mean(x+y)
#4
mean(x*y)
#5
mean(3*x+2*y-3)
#6
var(2*x-5)
#7
var(x+y)
# Chunk 59
poissonfunc <- function(n) {
x <- rpois(n, lambda = 5)
return(x)
}
exponentialfunc <- function(n) {
y <- rexp(n, rate = 1)
return(y)
}
binomfunc <- function(n) {
z <- rbinom(n, size = 10, prob = 0.01)
return(z)
}
# Chunk 60
x <- poissonfunc(1000)
hist(x, probability = TRUE)
xfit <- seq(-5, 15, 1)
yfit <- dpois(xfit, lambda = 5)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 61
y <- exponentialfunc(1000)
hist(y, probability = TRUE)
xfit <- seq(0, 10, 0.1)
yfit <- dexp(xfit, 1)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 62
z <- binomfunc(1000)
hist(z, probability = TRUE)
xfit <- seq(0, 3, 1)
yfit <- dbinom(xfit, size = 10, prob = 0.01)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 63
poisvector <- c()
expvector <- c()
i = 1
while (i < 1000) {
poisvector <- c(poisvector, mean(poissonfunc(10)))
expvector <- c(expvector, mean(exponentialfunc(10)))
i <- i + 1
}
# Chunk 64
hist(poisvector, probability = TRUE)
# Chunk 65
hist(expvector, probability = TRUE)
# Chunk 66
x <- poissonfunc(30)
hist(x, probability = TRUE)
xfit <- seq(-5, 15, 1)
yfit <- dpois(xfit, lambda = 5)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 67
x <- poissonfunc(100)
hist(x, probability = TRUE)
xfit <- seq(-5, 15, 1)
yfit <- dpois(xfit, lambda = 5)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 68
x <- poissonfunc(1000)
hist(x, probability = TRUE)
xfit <- seq(-5, 15, 1)
yfit <- dpois(xfit, lambda = 5)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 69
y <- exponentialfunc(30)
hist(y, probability = TRUE)
xfit <- seq(0, 10, 0.1)
yfit <- dexp(xfit, 1)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 70
y <- exponentialfunc(100)
hist(y, probability = TRUE)
xfit <- seq(0, 10, 0.1)
yfit <- dexp(xfit, 1)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 71
y <- exponentialfunc(1000)
hist(y, probability = TRUE)
xfit <- seq(0, 10, 0.1)
yfit <- dexp(xfit, 1)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 72
z <- binomfunc(30)
hist(z, probability = TRUE)
xfit <- seq(0, 3, 1)
yfit <- dbinom(xfit, size = 10, prob = 0.01)
lines(xfit, yfit, col="blue", lwd=2)
# Chunk 73
z <- binomfunc(100)
hist(z, probability = TRUE)
xfit <- seq(0, 3, 1)
yfit <- dbinom(xfit, size = 10, prob = 0.01)
lines(xfit, yfit, col="blue", lwd=2)
getOption("repos")
install("knitr 1.11")
library("knitr 1.11")
package("knitr 1.11")
install.packages('knitr')
install.packages('knitr', repos='http://cran.rstudio.org')
install.packages('knitr', repos='http://cran.rstudio.org')
install.packages('knitr', dependencies = TRUE)
