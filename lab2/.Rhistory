mu1 <- c(1:2000)
mu2 <- c(1:2000)
sigma1 <- c(1:2000)
sigma2 <- c(1:2000)
i <- 1
while (i <= 2000) {
x1 <- rgamma(n = 10, shape = 4, rate = 1)
x2 <- rgamma(n = 1000, shape = 4, rate = 1)
beta1_mle[i] <- gamma_beta_mle(x = x1, alpha = 4)
beta2_mle[i] <- gamma_beta_mle(x = x2, alpha = 4)
y1 <- rnorm(n = 10, mean = 10, sd = 2)
y2 <- rnorm(n = 10000, mean = 10, sd = 2)
mu1[i] <- norm_mu_mle(x = y1)
mu2[i] <- norm_mu_mle(x = y2)
#sigma1[i] <- norm_sigma2_mle(x = y1)
#sigma2[i] <- norm_sigma2_mle(x = y2)
i <- i + 1
}
hist(beta1_mle)
norm_mu_mle <- function(x) {
return(1/length(x)*sum(x))
}
norm_sigma2_mle <- function(x) {
sumhelp <- 0
j <- 1
while(j <= length(x)) {
sumhelp <- sumhelp + (x[j] - norm_mu_mle(x))**2
j <- j + 1
}
return(1/length(x)*sumhelp)
}
beta1_mle <- c(1:2000)
beta2_mle <- c(1:2000)
mu1 <- c(1:2000)
mu2 <- c(1:2000)
sigma1 <- c(1:2000)
sigma2 <- c(1:2000)
i <- 1
while (i <= 2000) {
x1 <- rgamma(n = 10, shape = 4, rate = 1)
x2 <- rgamma(n = 1000, shape = 4, rate = 1)
beta1_mle[i] <- gamma_beta_mle(x = x1, alpha = 4)
beta2_mle[i] <- gamma_beta_mle(x = x2, alpha = 4)
y1 <- rnorm(n = 10, mean = 10, sd = 2)
y2 <- rnorm(n = 10000, mean = 10, sd = 2)
mu1[i] <- norm_mu_mle(x = y1)
mu2[i] <- norm_mu_mle(x = y2)
sigma1[i] <- norm_sigma2_mle(x = y1)
sigma2[i] <- norm_sigma2_mle(x = y2)
i <- i + 1
}
beta1_mle <- c(1:2000)
beta2_mle <- c(1:2000)
mu1 <- c(1:2000)
mu2 <- c(1:2000)
sigma1 <- c(1:2000)
sigma2 <- c(1:2000)
i <- 1
while (i <= 2000) {
x1 <- rgamma(n = 10, shape = 4, rate = 1)
x2 <- rgamma(n = 10000, shape = 4, rate = 1)
beta1_mle[i] <- gamma_beta_mle(x = x1, alpha = 4)
beta2_mle[i] <- gamma_beta_mle(x = x2, alpha = 4)
y1 <- rnorm(n = 10, mean = 10, sd = 2)
y2 <- rnorm(n = 10000, mean = 10, sd = 2)
mu1[i] <- norm_mu_mle(x = y1)
mu2[i] <- norm_mu_mle(x = y2)
sigma1[i] <- norm_sigma2_mle(x = y1)
#sigma2[i] <- norm_sigma2_mle(x = y2)
i <- i + 1
}
hist(beta1_mle)
beta1_mle <- c(1:2000)
beta2_mle <- c(1:2000)
mu1 <- c(1:2000)
mu2 <- c(1:2000)
sigma1 <- c(1:2000)
sigma2 <- c(1:2000)
i <- 1
while (i <= 2000) {
x1 <- rgamma(n = 10, shape = 4, rate = 1)
x2 <- rgamma(n = 10000, shape = 4, rate = 1)
beta1_mle[i] <- gamma_beta_mle(x = x1, alpha = 4)
beta2_mle[i] <- gamma_beta_mle(x = x2, alpha = 4)
y1 <- rnorm(n = 10, mean = 10, sd = 2)
y2 <- rnorm(n = 10000, mean = 10, sd = 2)
mu1[i] <- norm_mu_mle(x = y1)
mu2[i] <- norm_mu_mle(x = y2)
sigma1[i] <- norm_sigma2_mle(x = y1)
#sigma2[i] <- norm_sigma2_mle(x = y2) #FRÅGA: GÅR LÅNGSAMT. HOW TO MAKE IT GO FASTER??? CAN WE DO THIS BY NOT LOOPING? IF SO, HOW DO WE ACHIEVE THIS WITHOUT LOOPING???
i <- i + 1
}
hist(beta1_mle)
hist(beta1_mle)
hist(beta2_mle)
hist(mu1)
hist(beta1_mle)
hist(beta2_mle)
hist(beta1_mle)
hist(beta2_mle)
hist(beta1_mle)
hist(beta2_mle)
hist(mu1)
hist(mu2)
hist(sigma1)
beta1_mle <- c(1:2000)
beta2_mle <- c(1:2000)
mu1 <- c(1:2000)
mu2 <- c(1:2000)
sigma1 <- c(1:2000)
sigma2 <- c(1:2000)
i <- 1
while (i <= 2000) {
x1 <- rgamma(n = 10, shape = 4, rate = 1)
x2 <- rgamma(n = 10000, shape = 4, rate = 1)
beta1_mle[i] <- gamma_beta_mle(x = x1, alpha = 4)
beta2_mle[i] <- gamma_beta_mle(x = x2, alpha = 4)
y1 <- rnorm(n = 10, mean = 10, sd = 2)
y2 <- rnorm(n = 1000, mean = 10, sd = 2)
mu1[i] <- norm_mu_mle(x = y1)
mu2[i] <- norm_mu_mle(x = y2)
sigma1[i] <- norm_sigma2_mle(x = y1)
sigma2[i] <- norm_sigma2_mle(x = y2) #FRÅGA: GÅR LÅNGSAMT. HOW TO MAKE IT GO FASTER??? CAN WE DO THIS BY NOT LOOPING? IF SO, HOW DO WE ACHIEVE THIS WITHOUT LOOPING???
i <- i + 1
}
hist(beta1_mle)
hist(sigma1)
hist(sigma1)
hist(sigma2)
hist(sigma1)
hist(sigma1)
hist(sigma2)
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + lbeta(par[1] + 1, x[i] + par[2])
}
return (helpsum + length(x)*lbeta(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + lbeta(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*lbeta(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + lbeta(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*lbeta(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + lbeta(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*lbeta(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + lbeta(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*lbeta(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + lbeta(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*lbeta(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + lbeta(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*lbeta(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + lbeta(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*lbeta(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + lbeta(par[1] + 1, x[i] + par[2]) + length(x)*lbeta(par[1], par[2])
i <- i + 1
}
return (helpsum)
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + lbeta(par[1] + 1, x[i] + par[2]) + length(x)*lbeta(par[1], par[2])
i <- i + 1
}
return (helpsum)
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
print(par[1])
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + lbeta(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*lbeta(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
print(par[2])
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + lbeta(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*lbeta(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
print(par[2])
helpsum <- 0
i <- 1
while(i < length(x)) {
helpsum <- helpsum + lbeta(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*lbeta(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
print(par[2])
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + lbeta(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*lbeta(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
print(par[2])
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + lbeta(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*lbeta(par[1], par[2]) * -1)
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
print(par[2])
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + lbeta(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return ((helpsum + length(x)*lbeta(par[1], par[2])*-1)
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
print(par[2])
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + lbeta(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return ((helpsum + length(x)*lbeta(par[1], par[2]))*-1)
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
print(par[2])
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + lbeta(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (optim((helpsum + length(x)*lbeta(par[1], par[2]))*-1))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + logb(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return ((helpsum + length(x)*logb(par[1], par[2]))*-1)
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + logb(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return ((helpsum + length(x)*logb(par[1], par[2]))*-1)
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + logb(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*logb(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + logb(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*logb(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + logb(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*logb(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + logb(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*logb(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + logb(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*logb(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + logb(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*logb(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + logb(par[1] + 1, x[i] + par[2]) + length(x)*logb(par[1], par[2])
i <- i + 1
}
return (helpsum)
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + logb(par[1] + 1, x[i] + par[2]) + length(x)*logb(par[1], par[2])
i <- i + 1
}
return (helpsum)
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + logb(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*logb(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + logb(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*logb(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + logb(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*logb(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + logb(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*logb(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + logb(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*logb(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
set.seed(1)
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + logb(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*logb(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
set.seed(1)
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + logb(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*logb(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
set.seed(300)
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + logb(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*logb(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
llbeta <- function(par, x){
helpsum <- 0
i <- 1
while(i <= length(x)) {
helpsum <- helpsum + logb(par[1] + 1, x[i] + par[2])
i <- i + 1
}
return (helpsum + length(x)*logb(par[1], par[2]))
}
llbeta(par = c(2, 2), x = c(0.01, 0.5, 0.99))
